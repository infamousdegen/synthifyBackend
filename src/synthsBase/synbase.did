type Account = record { owner : principal; subaccount : opt vec nat8 };
type Allowance = record { allowance : nat; expires_at : opt nat64 };
type AllowanceArgs = record { account : Account; spender : Account };
type SupportedStandard = record { url : text; name : text };
type Value = variant { Int : int; Nat : nat; Blob : vec nat8; Text : text };
type _AzleResult = variant { Ok : nat; Err : text };
type _AzleResult_1 = variant { Ok : vec record { text; Value }; Err : text };
type _AzleResult_2 = variant { Ok : opt Account; Err : text };
type _AzleResult_3 = variant { Ok : text; Err : text };
type _AzleResult_4 = variant { Ok : vec SupportedStandard; Err : text };
service : () -> {
  icrc1_balance_of : (Account) -> (nat) query;
  icrc1_decimals : () -> (_AzleResult) query;
  icrc1_metadata : () -> (_AzleResult_1) query;
  icrc1_minting_account : () -> (_AzleResult_2) query;
  icrc1_name : () -> (_AzleResult_3) query;
  icrc1_supported_standards : () -> (_AzleResult_4) query;
  icrc1_symbol : () -> (_AzleResult_3) query;
  icrc1_total_supply : () -> (_AzleResult) query;
  icrc2_allowance : (AllowanceArgs) -> (Allowance) query;
}